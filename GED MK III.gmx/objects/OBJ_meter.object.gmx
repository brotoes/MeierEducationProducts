<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_invis_meter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//To draw a meter for anything, just create me anywhere and set my veriables.
//remember to remember me in a variable and update my fill.

//variables for use by draw event
//these are defaults to prevent a crash in case the are not defined
//the calling object should

//length of bar in pixels, rounded down to multiple of 8
length = 80 

//amount of bar filled. value should be &lt; 1
fill = 1
//amount shown on bar for animated value change
visualized = fill

//color of the fill of the bar
fill_color = c_red

//if true, bar will be vertical, instead of horizontal
//TODO
vertical = false

//speed the bar empties or fills when value is changed
animate_speed = .05
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//animate
difference = fill - visualized
if (difference &gt; 0) {
    visualized += animate_speed
    if (fill - visualized &lt; 0) {
        visualized = fill
    }
} else if (difference &lt; 0) {
    visualized -= animate_speed
    if (fill - visualized &gt; visualized) {
        visualized = fill
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//todo animation messed things up a bit, fix it

draw_set_color(fill_color)

//bound fill
if (fill &lt; 0) {
    fill = 0
}
if (fill &gt; 1) {
    fill = 1
}

line_len = (length - 8) * fill - length % 8
vis_line_len = (length - 8) * visualized - length % 8
segment_count = (length - (length % 8))/8
if (segment_count &lt; 3) {
    segment_count = 3
}

if (vertical) {
    draw_line_width(x + 8, y - 3, x + 8, y - 6 - line_len, 13)

    draw_sprite_ext(SPR_meter, 0, x, y, 1, 1, 90, c_white, 1)
    for (i = 1; i &lt; segment_count - 1; i ++) {
        draw_sprite_ext(SPR_meter, 1, x, y - i * 8, 1, 1, 90, c_white, 1)
    }
    draw_sprite_ext(SPR_meter, 2, x, y - (segment_count - 1) * 8, 1, 1, 90, c_white, 1)
} else {
    //draw visualized amount
    draw_line_width(x + 3, y + 7, x + 3 + vis_line_len, y + 7, 13)
    draw_set_color(c_yellow)
    //draw fill amount
    draw_line_width(x + 3, y + 7, x + 3 + line_len, y + 7, 13)
    
    draw_sprite(SPR_meter, 0, x, y)
    for (i = 1; i &lt; segment_count - 1; i ++) {
        draw_sprite(SPR_meter, 1, x + i * 8, y)
    }
    draw_sprite(SPR_meter, 2, x + (segment_count - 1) * 8, y)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
