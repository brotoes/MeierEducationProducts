<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_overlay</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>battle = instance_find(OBJ_battle_controller, 0)

victory = battle.victory
gold_earned = battle.gold_earned

gold_total = floor(gold_earned*persvars.gold_multiplier)

//drawing variables
anim_counter = 0
main_col = make_color_rgb(73, 169, 129)
out_col = make_color_rgb(11, 74, 63)
margin = 10
line_time = 15
left_indent = 56
right_indent = 20

earnstr_listid = battle.killname_listid
earnval_listid = battle.killval_listid
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (battle) instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw backdrop
draw_set_alpha(0.8)
draw_set_color(c_gray)
draw_rectangle(0, 0, room_width, room_height, false)
draw_set_alpha(1)

if (victory) {
    //draw banners
    draw_sprite(spr_victory_ban, 0, room_width/2 - 
                sprite_get_width(spr_victory_ban)/2, margin*2)
    draw_sprite(SPR_got_banner, 0, room_width/2 - 
                sprite_get_width(spr_victory_ban)/2,
                sprite_get_height(spr_victory_ban) + margin*4)

    draw_set_font(FONT_big)
    //draw breakdown
    cur_y = sprite_get_height(spr_victory_ban) + 
            sprite_get_height(spr_got_ban) + margin*5
    cur_x = room_width/2 - sprite_get_width(spr_earn_ban)/2
    val_rightalign = cur_x + sprite_get_width(spr_earn_ban) - right_indent
    /*
    for (i = 0; i &lt; min(ds_list_size(earnstr_listid), anim_counter/line_time); i ++) {
        str = ds_list_find_value(earnstr_listid, i)
        val = ds_list_find_value(earnval_listid, i)
        if (i &gt; min(ds_list_size(earnstr_listid), anim_counter/line_time) - 1) {
            val = floor((val/line_time)*(anim_counter mod line_time))
        }
        val = string(val) + " z" 
           
        val_x = val_rightalign - string_width(val)
        
        draw_sprite(SPR_earn_banner, 0, cur_x, cur_y)
        draw_text_outlined_shadow(cur_x + left_indent, cur_y, str, main_col, out_col)
        draw_text_outlined_shadow(val_x, cur_y, val, main_col, out_col)
                
        cur_y += sprite_get_height(SPR_earn_banner) + margin
    }*/
    //if (anim_counter/line_time &gt; ds_list_size(earnstr_listid)) {
        //draw premult total
        str = "Earned"
        val = string(gold_earned) + " z"
        val_x = val_rightalign - string_width(val)
        banner_x = cur_x + (sprite_get_width(spr_earn_ban) - 
                    sprite_get_width(spr_mult_ban))
        draw_sprite(spr_mult_ban, 0, banner_x, cur_y)
        draw_text_outlined_shadow(banner_x + left_indent, cur_y, str, main_col, out_col)
        draw_text_outlined_shadow(val_x, cur_y, val, main_col, out_col)
        cur_y += sprite_get_height(spr_earn_ban) + margin

        //draw multiplier
        str = "Multiplier"
        val = string(persvars.gold_multiplier) + " x"
        val_x = val_rightalign - string_width(val)
        draw_sprite(spr_mult_ban, 0, banner_x, cur_y)
        draw_text_outlined_shadow(banner_x + left_indent, cur_y, str, main_col, out_col)
        draw_text_outlined_shadow(val_x, cur_y, val, main_col, out_col)
        cur_y += sprite_get_height(spr_earn_ban) + margin
    
        //draw final total
        draw_set_font(f_xl)
        str = "Total Zenni"
        val = string(gold_total) + " z"
        val_x = val_rightalign - string_width(val)
        draw_sprite(spr_tot_ban, 0, cur_x, cur_y + 10)
        draw_text_outlined_shadow(cur_x + left_indent, cur_y, str, main_col, out_col)
        draw_text_outlined_shadow(val_x, cur_y, val, main_col, out_col)
    //}
} else {
    draw_set_font(f_72)
    str = "Tap to Return"
    str_x = room_width/2 - string_width(str)/2
    str_y = room_height/2 - string_height(str)/2
    draw_text_outlined_shadow(str_x, str_y, str, main_col, out_col)
}

anim_counter ++


draw_set_color(c_black)
draw_set_font(f_normal)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
