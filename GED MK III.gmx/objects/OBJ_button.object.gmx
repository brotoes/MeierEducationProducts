<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_invis_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//this object creates a button with the text below. 
//it also dynamically changes its length
button_text = "Calling object, change me please"
//set this script to be what the button does
button_script = SCR_null_action
//pixel width of the drawn button. must be wider than text
width = 400

//if you'd like arguments, use these
arg0 = 0
arg1 = 0
arg2 = 0
arg3 = 0
arg4 = 0

sprite_index_modifier = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &gt;= x and 
    mouse_x &lt;= x + sprite_get_width(SPR_button)*(string_length(button_text) + 1)
    and mouse_y &gt;= y and mouse_y &lt;= y + sprite_get_height(SPR_button)) {
    script_execute(button_script, arg0, arg1, arg2, arg3, arg4)
}
sprite_index_modifier = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &gt;= x and 
    mouse_x &lt;= x + sprite_get_width(SPR_button)*(string_length(button_text) + 1)
    and mouse_y &gt;= y and mouse_y &lt;= y + sprite_get_height(SPR_button)) {
    sprite_index_modifier = 3
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>h_segs = width/sprite_get_width(SPR_button)
string_x = x + (h_segs*sprite_get_width(SPR_button))/2 - 
           string_width(button_text)/2
string_y = y + sprite_get_height(SPR_button)/2 - string_height(button_text)/2

draw_sprite(SPR_button, sprite_index_modifier, x, y)
for (i = 1; i &lt; h_segs-1; i ++) {
    draw_sprite(SPR_button, 1 + sprite_index_modifier,
                 x + sprite_get_width(SPR_button)*i, y)
}
draw_sprite(SPR_button, 2 + sprite_index_modifier,
            x + floor(h_segs)*sprite_get_width(SPR_button), y)

draw_set_color(c_teal)
draw_set_blend_mode(bm_add)
draw_text(string_x, string_y, button_text)
draw_set_blend_mode(bm_normal)
draw_set_color(c_black)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
