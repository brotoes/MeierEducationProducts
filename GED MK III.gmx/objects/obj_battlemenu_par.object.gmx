<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_par</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>obj_battleoverlay_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>battle = instance_find(obj_battle_con, 0)

anim_speed = 64

dist = 300

angles[0, 0] = 45

angles[1, 0] = 45

angles[2, 0] = 22.5
angles[2, 1] = 67.5

angles[3, 0] = 0
angles[3, 1] = 45
angles[3, 2] = 90

angles[4, 0] = 0
angles[4, 1] = 90/3
angles[4, 2] = 90/3*2
angles[4, 3] = 90
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (not cycle.menu_open) {
    instance_destroy()
}

index = 0
num_butts = instance_number(obj_battlemenu_par)
for (i = 0; i &lt; num_butts; i ++) {
    if (id = instance_find(obj_battlemenu_par, i)) {
        index = i
    }
}

angle = degtorad(angles[num_butts, index])

dest_x = cycle.center_x + cos(angle)*dist
dest_y = cycle.center_y + sin(angle)*dist

if (x &lt; dest_x) {
    x += anim_speed
    if (x &gt; dest_x) {
        x = dest_x
    }
} else if (x &gt; dest_x) {
    x -= anim_speed
    if (x &lt; dest_x) {
        x = dest_x
    }
}
if (y &lt; dest_y) {
    y += anim_speed
    if (y &gt; dest_y) {
        y = dest_y
    }
} else if (y &gt; dest_y) {
    y -= anim_speed
    if (y &lt; dest_y) {
        y = dest_y
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
