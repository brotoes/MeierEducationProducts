<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_music</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(M_title_screen, PRIORITY_MUSIC, true)
prev_room = room
recently_off = false

//control music at the end of a battle
battle_over = false
victory = false
fanfare_done = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mtoggle = instance_find(OBJ_mtoggle, 0)
if (mtoggle.image_index == 0) {
    if (room != prev_room or recently_off) {
        recently_off = false
        prev_room = room
        switch (room) {
            case store_room: {
                audio_stop_all()
                audio_play_sound(M_store_theme, PRIORITY_MUSIC, true)
            } break
            case battle_room: {
                audio_stop_all()
                audio_play_sound(M_battle_theme, PRIORITY_MUSIC, true)
            } break
            default:
                audio_stop_all()
                audio_play_sound(M_title_screen, PRIORITY_MUSIC, true)
        }
    }
} else {
    audio_stop_all()
    recently_off = true
}
//control victory music
if (room == battle_room and battle_over and victory) {
    audio_stop_all()
    audio_play_sound(M_fanfare, PRIORITY_MUSIC, false)
    battle_over = false
    fanfare_done = true
} else if (room == battle_room and fanfare_done and victory and not audio_is_playing(M_fanfare)) {
    fanfare_done = false
    audio_play_sound(M_victory, PRIORITY_MUSIC, true)
} else if (room == battle_room and battle_over) {
    audio_stop_all()
    audio_play_sound(M_defeat, PRIORITY_MUSIC, true)
    battle_over = false
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
