<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_parent</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//stats
element = ELEMENT_NULL

selected = false

battle = instance_find(OBJ_battle_controller, 0)
enemy_floor = instance_find(OBJ_floor, 0)
cycle = instance_find(OBJ_cycle, 0)
action_bar = instance_find(OBJ_action_bar, 0)
persistent_variables = instance_find(OBJ_persistent_variables, 0)

level_played = 0

//choose position dealt from (for animation)
floor_offset = 0
x = 0
y = enemy_floor.y + floor_offset
dest_x = x
dest_y = y
anim_speed = 16
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//update position
anim_speed = max(point_distance(x, y, dest_x, dest_y)/10, 16)
index = 0
num_cards = instance_number(OBJ_card_parent)
for (i = 0; i &lt; num_cards; i ++) {
    if (id = instance_find(OBJ_card_parent, i)) {
        index = i
    }
}

dest_y = enemy_floor.y + floor_offset - 25*selected
dest_x = room_width/2 - ((sprite_width + 4)*num_cards/2)
    + (index)*(sprite_width + 8) - 8
dest_x = floor(dest_x)
    
if (x &lt; dest_x) {
    x += anim_speed
    if (x &gt; dest_x) {
        x = dest_x
    }
} else if (x &gt; dest_x) {
    x -= anim_speed
    if (x &lt; dest_x) {
        x = dest_x
    }
}
if (y &lt; dest_y) {
    y += anim_speed
    if (y &gt; dest_y) {
        y = dest_y
    }
} else if (y &gt; dest_y) {
    y -= anim_speed
    if (y &lt; dest_y) {
        y = dest_y
    }
}

x = floor(x)
y = floor(y)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>persistent_variables.upgrade[element] ++
persistent_variables.upgrade[element] = persistent_variables.upgrade[element] % 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>selectable = instance_number(OBJ_battle_overlay_parent) == 0 and 
                battle.whose_turn == 0
if (selected and selectable) {
    selected = false
    /*remove card from cycle*/
    index = ds_list_find_index(cycle.elements_listid, id)
    ds_list_delete(cycle.elements_listid, index)
} else if (selectable) {
    index = element - 1
    if (index &lt; 0) {
        index = 4
    }
    if (action_bar.points &lt; MAX_POINTS or 
        cycle.element_levels[index] == 4) {
        selected = true
        /*add card into cycle*/
        ds_list_add(cycle.elements_listid, id)
    } else {
        action_bar.flash = action_bar.flash_time
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, 0, x, y)
draw_set_font(FONT_big)
draw_text(x + 20, y + 110, persistent_variables.damage[persistent_variables.upgrade[element]])
draw_set_font(FONT_normal)

upgrade = persistent_variables.upgrade[element]
tier = 0
if (upgrade &gt;= 9) {
    tier = 3
} else if (upgrade &gt;= 6) {
    tier = 2
} else if (upgrade &gt;= 3) {
    tier = 1
}
index = element*4 + tier

draw_sprite(SPR_badges, index, x + 72, y + 109)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
