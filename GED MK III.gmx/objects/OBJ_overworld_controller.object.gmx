<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//count the number of iterations. For use with animation
iter_count = 0

//these colors to be used for path drawing
//they've been put here for easy manipulation
passed_path_color = make_color_rgb(255, 0, 0)
new_path_color = make_color_rgb(0, 0, 0)
path_bg_color = make_color_rgb(255, 255, 0)

//these variables store the levels in the overworld and how many of them
//the player has passed
level_listid = ds_list_create()
levels_passed = 2

//populate list with level indicators
//TODO: atm, I'm not sure how I should go about sorting it.
//Perhaps using depth?
//  Depending on design of the overworld, x position may also work.
for (i = 0; i &lt; instance_number(OBJ_level_indicator); i ++) {
    ds_list_add(level_listid,instance_find(OBJ_level_indicator, i))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//step the iteration count
iter_count ++

//get the number of levels on the overworld
level_count = ds_list_size(level_listid)

//draw lines between all of the overworld's level indicators
for(i = 0; i &lt; level_count - 1; i ++) {
    //draw the outline of the line between level indicators
    draw_set_color(path_bg_color)
    draw_line_width(ds_list_find_value(level_listid, i).x, 
                    ds_list_find_value(level_listid, i).y,
                    ds_list_find_value(level_listid, i + 1).x, 
                    ds_list_find_value(level_listid, i + 1).y, 14)

    //check what color to draw the line.
    //different color if the level has been passed
    if (i &lt; levels_passed) {
        draw_set_color(passed_path_color)
    } else {
        draw_set_color(new_path_color)
    }
    
    //draw the line between two level indicators
    draw_line_width(ds_list_find_value(level_listid, i).x, 
                    ds_list_find_value(level_listid, i).y,
                    ds_list_find_value(level_listid, i + 1).x, 
                    ds_list_find_value(level_listid, i + 1).y, 10)

    //if there is a new level available, indicate it.
    if (i == levels_passed) {
        draw_sprite(SPR_glow, iter_count % sprite_get_number(SPR_glow), 
                    ds_list_find_value(level_listid, i).x,
                    ds_list_find_value(level_listid, i).y)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
