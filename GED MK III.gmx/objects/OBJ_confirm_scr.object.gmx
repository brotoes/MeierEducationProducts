<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_invis_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pers_vars = instance_find(OBJ_persistent_variables, 0)

gold = pers_vars.gold
enough_gold = true
//set these when creating an instance
element = ELEMENT_NULL
cost = 0
level = 0
description = "Text hasn't been assigned yet :("

//drawing variables
margin = 10

bg_color = c_black
bg_alpha = 0.5

overlay_color = c_gray
overlay_alpha = 0.7
text_color = c_blue

main_col = c_blue
outline_col = c_black

insuf_main_col = c_red
insuf_outline_col = c_black
insuf_block_col = c_purple

//derived drawing variables
bg_l = margin
bg_r = room_width - margin
bg_b = room_height - margin
bg_t = margin

desc_t = margin + margin
desc_b = room_height/GOLD_RAT - margin/2
desc_r = room_width - margin - margin
desc_l = room_width - room_width/GOLD_RAT + margin/2

ico_b = (desc_b - desc_t)/2 + desc_t - margin/2
lvl_t = ico_b + margin
ind_l = margin + margin
ind_r = desc_l - margin

but_t = desc_b + margin
but_b = room_height - margin - margin
can_r = room_width/2 - margin/2
buy_l = can_r + margin

icon_x = (ind_r - ind_l)/2 + ind_l
icon_y = (desc_b - desc_t)/2 + desc_t
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x &lt;= can_r and mouse_x &gt;= ind_l and
    mouse_y &lt;= but_b and mouse_y &gt;= but_t) {
    instance_destroy()
} else if (mouse_x &lt;= desc_r and mouse_x &gt;= buy_l and
    mouse_y &lt;= but_b and mouse_y &gt;= but_t and enough_gold) {
    pers_vars.upgrade[element] ++
    pers_vars.gold -= cost
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw screen outline
draw_set_alpha(bg_alpha)
draw_rectangle(bg_l, bg_t, bg_r, bg_b, false)

//draw overlay blocks
draw_set_color(overlay_color)
draw_set_alpha(overlay_alpha)
draw_rectangle(ind_l, desc_t, ind_r, desc_b, false)
draw_rectangle(desc_l, desc_t, desc_r, desc_b, false)
draw_rectangle(ind_l, but_t, can_r, but_b, false)
if (not enough_gold) {
    draw_set_color(insuf_block_col)
}
draw_rectangle(buy_l, but_t, desc_r, but_b, false)
//draw overlay outlines
draw_set_alpha(1)
draw_set_color(overlay_color)
draw_rectangle(ind_l, desc_t, ind_r, desc_b, true)
draw_rectangle(desc_l, desc_t, desc_r, desc_b, true)
draw_rectangle(ind_l, but_t, can_r, but_b, true)
if (not enough_gold) {
    draw_set_color(insuf_block_col)
}
draw_rectangle(buy_l, but_t, desc_r, but_b, true)

//draw indicators
draw_sprite(SPR_confirm_elems, element, icon_x, icon_y)
draw_set_font(FONT_120p)
str = string(level)
draw_text_outlined_shadow(icon_x + sprite_get_width(SPR_confirm_elems)/2 - string_width(str),
                            icon_y + sprite_get_height(SPR_confirm_elems)/2 - string_height(str) + 40,
                            level, main_col, outline_col)

//draw buttons
draw_set_font(FONT_72p)
cancel_str = "Cancel"
buy_str = "Buy: " + string(cost) + "z"
draw_text_outlined_shadow((can_r - ind_l)/2 + ind_l - string_width(cancel_str)/2,
                            (but_b - but_t)/2 + but_t - string_height(cancel_str)/2,
                            cancel_str, main_col, outline_col)
if (enough_gold) {
    draw_text_outlined_shadow((desc_r - buy_l)/2 + buy_l - string_width(buy_str)/2,
                                (but_b - but_t)/2 + but_t - string_height(buy_str)/2,
                                buy_str, main_col, outline_col)
} else {
    draw_text_outlined_shadow((desc_r - buy_l)/2 + buy_l - string_width(buy_str)/2,
                                (but_b - but_t)/2 + but_t - string_height(buy_str)/2,
                                buy_str, insuf_main_col, insuf_outline_col)
}
//draw description
draw_set_font(FONT_big)
draw_set_color(main_col)
draw_text_ext(desc_l + margin, desc_t + margin, description, 40,
                 (desc_r - margin) - (desc_l + margin))
draw_set_font(FONT_normal)
draw_set_color(c_black)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
