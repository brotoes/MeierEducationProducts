<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SPR_counter</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>10000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//load save data
ini_open("savedata.ini")
gold = ini_read_real("data", "gold", 0)
gold_multiplier = ini_read_real("data", "gmult", 1)
//how many stages of the current runthrough has the player completed?
stage = ini_read_real("data", "stage", 0)
//which runthrough is the player on?
run = ini_read_real("data", "run", 1)
//upgrades of non-element items
hp_lvl = ini_read_real("data", "hp", 0)
purse_lvl = ini_read_real("data", "purse", 0)
//store player upgrades
upgrade[ELEMENT_NULL] = 0
for (i = ELEMENT_FIRE; i &lt; ELEMENT_NULL; i ++) {
    upgrade[i] = ini_read_real("data", "elem" + string(i), 0)
}
hand_size = ini_read_real("data", "hand", 7)
ini_close()

save_counter = 0

//what level gives what damage?
damage[0] = 1
damage[1] = 2
damage[2] = 3
damage[3] = 5
damage[4] = 7
damage[5] = 10
damage[6] = 13
damage[7] = 17
damage[8] = 21
damage[9] = 26

//the cost to purchase a given level
upg_cost[0] = 0
upg_cost[1] = 50
upg_cost[2] = 100
upg_cost[3] = 200
upg_cost[4] = 300
upg_cost[5] = 500
upg_cost[6] = 700
upg_cost[7] = 900
upg_cost[8] = 1000
upg_cost[9] = 2000
upg_cost[10] = "----"

purse_cost[0] = 0
purse_cost[1] = 50
purse_cost[2] = 100
purse_cost[3] = 200
purse_cost[4] = 300
purse_cost[5] = 500
purse_cost[6] = 700
purse_cost[7] = 900
purse_cost[8] = 1000
purse_cost[9] = 2000
purse_cost[10] = "----"

hp_cost[0] = 0
hp_cost[1] = 50
hp_cost[2] = 100
hp_cost[3] = 200
hp_cost[4] = 300
hp_cost[5] = 500
hp_cost[6] = 700
hp_cost[7] = 900
hp_cost[8] = 1000
hp_cost[9] = 2000
hp_cost[10] = "----"

//amount of hp the player will have given a level
hp_amount[0] = 50
hp_amount[1] = 60
hp_amount[2] = 70
hp_amount[3] = 80
hp_amount[4] = 90
hp_amount[5] = 100
hp_amount[6] = 150
hp_amount[7] = 200
hp_amount[8] = 250
hp_amount[9] = 500
hp_amount[10] = 1000

element_colors[ELEMENT_NULL] = c_black
element_colors[ELEMENT_FIRE] = c_red
element_colors[ELEMENT_EARTH] = c_yellow
element_colors[ELEMENT_METAL] = c_purple
element_colors[ELEMENT_WATER] = c_blue
element_colors[ELEMENT_WOOD] = c_green
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//TODO do this well
hp = 20 + hp_lvl*10

gold_multiplier = (purse_lvl/10) + 1

if (stage == instance_number(OBJ_stage_ind)) {
    stage = 0
    run ++
}

save_counter = (save_counter + 1) mod 300
if (save_counter == 0) {
    //write save data
    ini_open("savedata.ini")
    ini_write_real("data", "gold", gold)
    ini_write_real("data", "gmult", gold_multiplier)
    //how many stages of the current runthrough has the player completed?
    ini_write_real("data", "stage", stage)
    //which runthrough is the player on?
    ini_write_real("data", "run", run)
    //upgrades of non-element items
    ini_write_real("data", "hp", hp_lvl)
    ini_write_real("data", "purse", purse_lvl)
    //store player upgrades
    for (i = ELEMENT_FIRE; i &lt; ELEMENT_NULL; i ++) {
        ini_write_real("data", "elem" + string(i), upgrade[i])
    }
    ini_write_real("data", "hand", hand_size)
    ini_close()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stage ++
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stage --
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
